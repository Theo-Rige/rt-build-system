{"version":3,"file":"component.min.js","names":["codeToHtml","Tabs","constructor","root","this","tabList","querySelector","tabs","Array","from","querySelectorAll","panels","indicator","setAttribute","forEach","tab","index","panel","tabID","id","panelId","hidden","addEventListener","event","preventDefault","selectTab","updateIndicator","selectedTab","selected","tabIndex","getAttribute","tabRect","getBoundingClientRect","listRect","style","width","left","preview","document","getElementById","previewExpandButton","copyDesignButton","codeTabs","removeAttribute","classList","toggle","async","componentHTML","innerHTML","response","fetch","method","headers","Authorization","body","JSON","stringify","html","clip","ok","clipboardDataFromAPI","text","navigator","clipboard","writeText","toggleButtonState","error","console","statusText","code","copyButton","codeContainer","lang","dataset","formattedCode","textContent","theme","colorReplacements","button","className","duration","add","setTimeout","remove"],"sources":["component.js"],"mappings":"qBAASA,MAAkB,6BAE3B,MAAMC,EACL,WAAAC,CAAYC,GACXC,KAAKD,KAAOA,EACZC,KAAKC,QAAUF,EAAKG,cAAc,cAClCF,KAAKG,KAAOC,MAAMC,KAAKN,EAAKO,iBAAiB,kBAC7CN,KAAKO,OAASH,MAAMC,KAAKN,EAAKO,iBAAiB,gBAC/CN,KAAKQ,UAAYR,KAAKC,QAAQC,cAAc,mBAE5CF,KAAKC,QAAQQ,aAAa,OAAQ,WAElCT,KAAKG,KAAKO,SAAQ,CAACC,EAAKC,KACvBD,EAAIF,aAAa,OAAQ,OACzBE,EAAIF,aAAa,WAAsB,IAAVG,EAAc,IAAM,MACjDD,EAAIF,aAAa,gBAA2B,IAAVG,EAAc,OAAS,SAEzD,MAAMC,EAAQb,KAAKO,OAAOK,GAE1B,GAAIC,EAAO,CACV,MAAMC,EAAQH,EAAII,IAAM,OAAOH,IACzBI,EAAUH,EAAME,IAAM,YAAYH,IACxCD,EAAII,GAAKD,EACTD,EAAME,GAAKC,EACXL,EAAIF,aAAa,gBAAiBO,GAClCH,EAAMJ,aAAa,OAAQ,YAC3BI,EAAMJ,aAAa,kBAAmBK,GACtCD,EAAMI,OAAmB,IAAVL,CAChB,KAGDZ,KAAKG,KAAKO,SAASC,IAClBA,EAAIO,iBAAiB,SAAUC,IAC9BA,EAAMC,iBACNpB,KAAKqB,UAAUV,SAIjBX,KAAKsB,gBAAgBtB,KAAKG,KAAK,GAChC,CAEA,SAAAkB,CAAUE,GACTvB,KAAKG,KAAKO,SAASC,IAClB,MAAMa,EAAWb,IAAQY,EACzBZ,EAAIF,aAAa,gBAAiBe,GAClCb,EAAIc,SAAWD,EAAW,GAAK,KAGhCxB,KAAKO,OAAOG,SAASG,IACpB,MAAMC,EAAQS,EAAYG,aAAa,iBACvCb,EAAMI,OAASJ,EAAME,KAAOD,KAG7Bd,KAAKsB,gBAAgBC,EACtB,CAEA,eAAAD,CAAgBX,GACf,IAAKX,KAAKQ,YAAcG,EAAK,OAC7B,MAAMgB,EAAUhB,EAAIiB,wBACdC,EAAW7B,KAAKC,QAAQ2B,wBAC9B5B,KAAKQ,UAAUsB,MAAMC,MAAQ,GAAGJ,EAAQI,UACxC/B,KAAKQ,UAAUsB,MAAME,KAAUL,EAAQK,KAAOH,EAASG,KAA3B,IAC7B,EAGD,MAAMC,EAAUC,SAASC,eAAe,WAClCC,EAAsBF,SAAShC,cAAc,6BAC7CmC,EAAmBH,SAAShC,cAAc,6BAC1CoC,EAAWJ,SAASC,eAAe,QAoCzC,GAlCIF,GAAWG,GACdA,EAAoBlB,iBAAiB,SAAS,KAC7Ce,EAAQM,gBAAgB,SACxBN,EAAQO,UAAUC,OAAO,wBAIvBJ,GACHA,EAAiBnB,iBAAiB,SAASwB,UAC1C,MAAMC,EAAgBV,EAAQW,UACxBC,QAAiBC,MAAM,6BAA8B,CAC1DC,OAAQ,OACRC,QAAS,CACR,eAAgB,mBAChBC,cAAe,yDAEhBC,KAAMC,KAAKC,UAAU,CAAEC,KAAMV,EAAeW,MAAM,MAEnD,GAAIT,EAASU,GAAI,CAChB,MAAMC,QAA6BX,EAASY,OAC5C,UACOC,UAAUC,UAAUC,UAAUJ,GACpCK,EAAkBxB,EAAkB,gBACrC,CAAE,MAAOyB,GACRC,QAAQD,MAAM,+BAAgCA,GAC9CD,EAAkBxB,EAAkB,cACrC,CACD,MACC0B,QAAQD,MAAM,2CAA4CjB,EAASmB,YACnEH,EAAkBxB,EAAkB,kBAKnCC,EAAU,CACMA,EAAShC,iBAAiB,eAElCI,SAAQgC,MAAO7B,IACzB,MAAMoD,EAAOpD,EAAMX,cAAc,QACjC,IAAK+D,EAAM,OAEX,MAAMC,EAAarD,EAAMX,cAAc,SACjCiE,EAAgBtD,EAAMX,cAAc,SAE1C,IACC,MAAMkE,EAAOD,EAAcE,QAAQD,MAAQ,aACrCE,QAAsB1E,EAAWqE,EAAKM,YAAa,CACxDH,OACAI,MAAO,cACPC,kBAAmB,CAAE,UAAW,aAG7BN,IAAeA,EAAcvB,UAAY0B,GAEzCJ,GACHA,EAAWhD,iBAAiB,SAASwB,UACpC,UACOgB,UAAUC,UAAUC,UAAUK,EAAKM,aACzCV,EAAkBK,EAAY,gBAC/B,CAAE,MAAOJ,GACRC,QAAQD,MAAM,kBAAmBA,GACjCD,EAAkBK,EAAY,cAC/B,IAGH,CAAE,MAAOJ,GACRC,QAAQD,MAAM,+BAAgCA,EAC/C,KAGD,IAAIjE,EAAKyC,EACV,CAEA,SAASuB,EAAkBa,EAAQC,EAAWC,EAAW,KACxDF,EAAOlC,UAAUqC,IAAIF,GAErBG,YAAW,KACVJ,EAAOlC,UAAUuC,OAAOJ,KACtBC,EACJ","ignoreList":[],"sourcesContent":["import { codeToHtml } from 'https://esm.sh/shiki@3.5.0'\r\n\r\nclass Tabs {\r\n\tconstructor(root) {\r\n\t\tthis.root = root\r\n\t\tthis.tabList = root.querySelector('.tabs-list')\r\n\t\tthis.tabs = Array.from(root.querySelectorAll('.tabs-trigger'))\r\n\t\tthis.panels = Array.from(root.querySelectorAll('.tabs-panel'))\r\n\t\tthis.indicator = this.tabList.querySelector('.tabs-indicator')\r\n\r\n\t\tthis.tabList.setAttribute('role', 'tablist')\r\n\r\n\t\tthis.tabs.forEach((tab, index) => {\r\n\t\t\ttab.setAttribute('role', 'tab')\r\n\t\t\ttab.setAttribute('tabindex', index === 0 ? '0' : '-1')\r\n\t\t\ttab.setAttribute('aria-selected', index === 0 ? 'true' : 'false')\r\n\r\n\t\t\tconst panel = this.panels[index]\r\n\r\n\t\t\tif (panel) {\r\n\t\t\t\tconst tabID = tab.id || `tab-${index}`\r\n\t\t\t\tconst panelId = panel.id || `tabpanel-${index}`\r\n\t\t\t\ttab.id = tabID\r\n\t\t\t\tpanel.id = panelId\r\n\t\t\t\ttab.setAttribute('aria-controls', panelId)\r\n\t\t\t\tpanel.setAttribute('role', 'tabpanel')\r\n\t\t\t\tpanel.setAttribute('aria-labelledby', tabID)\r\n\t\t\t\tpanel.hidden = index !== 0\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.tabs.forEach((tab) => {\r\n\t\t\ttab.addEventListener('click', (event) => {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tthis.selectTab(tab)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tthis.updateIndicator(this.tabs[0])\r\n\t}\r\n\r\n\tselectTab(selectedTab) {\r\n\t\tthis.tabs.forEach((tab) => {\r\n\t\t\tconst selected = tab === selectedTab\r\n\t\t\ttab.setAttribute('aria-selected', selected)\r\n\t\t\ttab.tabIndex = selected ? 0 : -1\r\n\t\t})\r\n\r\n\t\tthis.panels.forEach((panel) => {\r\n\t\t\tconst tabID = selectedTab.getAttribute('aria-controls')\r\n\t\t\tpanel.hidden = panel.id !== tabID\r\n\t\t})\r\n\r\n\t\tthis.updateIndicator(selectedTab)\r\n\t}\r\n\r\n\tupdateIndicator(tab) {\r\n\t\tif (!this.indicator || !tab) return\r\n\t\tconst tabRect = tab.getBoundingClientRect()\r\n\t\tconst listRect = this.tabList.getBoundingClientRect()\r\n\t\tthis.indicator.style.width = `${tabRect.width}px`\r\n\t\tthis.indicator.style.left = `${tabRect.left - listRect.left}px`\r\n\t}\r\n}\r\n\r\nconst preview = document.getElementById('preview')\r\nconst previewExpandButton = document.querySelector('#preview .preview__expand')\r\nconst copyDesignButton = document.querySelector('.rtbs-button--copy-design')\r\nconst codeTabs = document.getElementById('code')\r\n\r\nif (preview && previewExpandButton) {\r\n\tpreviewExpandButton.addEventListener('click', () => {\r\n\t\tpreview.removeAttribute('style')\r\n\t\tpreview.classList.toggle('preview--expanded')\r\n\t})\r\n}\r\n\r\nif (copyDesignButton) {\r\n\tcopyDesignButton.addEventListener('click', async () => {\r\n\t\tconst componentHTML = preview.innerHTML\r\n\t\tconst response = await fetch('https://api.to.design/html', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: 'Bearer zpka_4c3accd44d2e4c36911c7ab921e46f74_26e07eb8'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ html: componentHTML, clip: true })\r\n\t\t})\r\n\t\tif (response.ok) {\r\n\t\t\tconst clipboardDataFromAPI = await response.text()\r\n\t\t\ttry {\r\n\t\t\t\tawait navigator.clipboard.writeText(clipboardDataFromAPI)\r\n\t\t\t\ttoggleButtonState(copyDesignButton, 'copy--success')\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Failed to copy to clipboard:', error)\r\n\t\t\t\ttoggleButtonState(copyDesignButton, 'copy--error')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.error('Failed to fetch clipboard data from API:', response.statusText)\r\n\t\t\ttoggleButtonState(copyDesignButton, 'copy--error')\r\n\t\t}\r\n\t})\r\n}\r\n\r\nif (codeTabs) {\r\n\tconst codePanels = codeTabs.querySelectorAll('.tabs-panel')\r\n\r\n\tcodePanels.forEach(async (panel) => {\r\n\t\tconst code = panel.querySelector('code')\r\n\t\tif (!code) return\r\n\r\n\t\tconst copyButton = panel.querySelector('.copy')\r\n\t\tconst codeContainer = panel.querySelector('.code')\r\n\r\n\t\ttry {\r\n\t\t\tconst lang = codeContainer.dataset.lang || 'javascript'\r\n\t\t\tconst formattedCode = await codeToHtml(code.textContent, {\r\n\t\t\t\tlang,\r\n\t\t\t\ttheme: 'github-dark',\r\n\t\t\t\tcolorReplacements: { '#24292e': '#181d27' }\r\n\t\t\t})\r\n\r\n\t\t\tif (codeContainer) codeContainer.innerHTML = formattedCode\r\n\r\n\t\t\tif (copyButton) {\r\n\t\t\t\tcopyButton.addEventListener('click', async () => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait navigator.clipboard.writeText(code.textContent)\r\n\t\t\t\t\t\ttoggleButtonState(copyButton, 'copy--success')\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.error('Failed to copy:', error)\r\n\t\t\t\t\t\ttoggleButtonState(copyButton, 'copy--error')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error processing code panel:', error)\r\n\t\t}\r\n\t})\r\n\r\n\tnew Tabs(codeTabs)\r\n}\r\n\r\nfunction toggleButtonState(button, className, duration = 2000) {\r\n\tbutton.classList.add(className)\r\n\r\n\tsetTimeout(() => {\r\n\t\tbutton.classList.remove(className)\r\n\t}, duration)\r\n}\r\n"]}