{"version":3,"file":"component.min.js","names":["codeToHtml","codeTabs","document","getElementById","phpCodeSection","jsCodeSection","code","querySelector","innerHTML","textContent","lang","theme","constructor","root","this","tabList","tabs","Array","from","querySelectorAll","panels","indicator","setAttribute","forEach","tab","index","panel","tabID","id","panelId","hidden","addEventListener","event","preventDefault","selectTab","updateIndicator","selectedTab","selected","tabIndex","getAttribute","tabRect","getBoundingClientRect","listRect","style","width","left"],"sources":["component.js"],"mappings":"qBAASA,MAAkB,6BAkE3B,MAAMC,EAAWC,SAASC,eAAe,QACnCC,EAAiBF,SAASC,eAAe,uBACzCE,EAAgBH,SAASC,eAAe,sBAE9C,GAAIC,EAAgB,CACnB,MAAME,EAAOF,EAAeG,cAAc,QAEtCD,IACHF,EAAeI,gBAAkBR,EAAWM,EAAKG,YAAa,CAC7DC,KAAM,MACNC,MAAO,gBAGV,CAEA,GAAIN,EAAe,CAClB,MAAMC,EAAOD,EAAcE,cAAc,QAErCD,IACHD,EAAcG,gBAAkBR,EAAWM,EAAKG,YAAa,CAC5DC,KAAM,KACNC,MAAO,gBAGV,CAEIV,GAAU,IA1Fd,MACC,WAAAW,CAAYC,GACXC,KAAKD,KAAOA,EACZC,KAAKC,QAAUF,EAAKN,cAAc,cAClCO,KAAKE,KAAOC,MAAMC,KAAKL,EAAKM,iBAAiB,kBAC7CL,KAAKM,OAASH,MAAMC,KAAKL,EAAKM,iBAAiB,gBAC/CL,KAAKO,UAAYP,KAAKC,QAAQR,cAAc,mBAE5CO,KAAKC,QAAQO,aAAa,OAAQ,WAElCR,KAAKE,KAAKO,SAAQ,CAACC,EAAKC,KACvBD,EAAIF,aAAa,OAAQ,OACzBE,EAAIF,aAAa,WAAsB,IAAVG,EAAc,IAAM,MACjDD,EAAIF,aAAa,gBAA2B,IAAVG,EAAc,OAAS,SAEzD,MAAMC,EAAQZ,KAAKM,OAAOK,GAE1B,GAAIC,EAAO,CACV,MAAMC,EAAQH,EAAII,IAAM,OAAOH,IACzBI,EAAUH,EAAME,IAAM,YAAYH,IACxCD,EAAII,GAAKD,EACTD,EAAME,GAAKC,EACXL,EAAIF,aAAa,gBAAiBO,GAClCH,EAAMJ,aAAa,OAAQ,YAC3BI,EAAMJ,aAAa,kBAAmBK,GACtCD,EAAMI,OAAmB,IAAVL,CAChB,KAGDX,KAAKE,KAAKO,SAASC,IAClBA,EAAIO,iBAAiB,SAAUC,IAC9BA,EAAMC,iBACNnB,KAAKoB,UAAUV,SAKjBV,KAAKqB,gBAAgBrB,KAAKE,KAAK,GAChC,CAEA,SAAAkB,CAAUE,GACTtB,KAAKE,KAAKO,SAASC,IAClB,MAAMa,EAAWb,IAAQY,EACzBZ,EAAIF,aAAa,gBAAiBe,GAClCb,EAAIc,SAAWD,EAAW,GAAK,KAGhCvB,KAAKM,OAAOG,SAASG,IACpB,MAAMC,EAAQS,EAAYG,aAAa,iBACvCb,EAAMI,OAASJ,EAAME,KAAOD,KAG7Bb,KAAKqB,gBAAgBC,EACtB,CAEA,eAAAD,CAAgBX,GACf,IAAKV,KAAKO,YAAcG,EAAK,OAC7B,MAAMgB,EAAUhB,EAAIiB,wBACdC,EAAW5B,KAAKC,QAAQ0B,wBAC9B3B,KAAKO,UAAUsB,MAAMC,MAAQ,GAAGJ,EAAQI,UACxC9B,KAAKO,UAAUsB,MAAME,KAAUL,EAAQK,KAAOH,EAASG,KAA3B,IAC7B,GA6BsB5C","ignoreList":[],"sourcesContent":["import { codeToHtml } from 'https://esm.sh/shiki@3.5.0'\r\n\r\nclass Tabs {\r\n\tconstructor(root) {\r\n\t\tthis.root = root\r\n\t\tthis.tabList = root.querySelector('.tabs-list')\r\n\t\tthis.tabs = Array.from(root.querySelectorAll('.tabs-trigger'))\r\n\t\tthis.panels = Array.from(root.querySelectorAll('.tabs-panel'))\r\n\t\tthis.indicator = this.tabList.querySelector('.tabs-indicator')\r\n\r\n\t\tthis.tabList.setAttribute('role', 'tablist')\r\n\r\n\t\tthis.tabs.forEach((tab, index) => {\r\n\t\t\ttab.setAttribute('role', 'tab')\r\n\t\t\ttab.setAttribute('tabindex', index === 0 ? '0' : '-1')\r\n\t\t\ttab.setAttribute('aria-selected', index === 0 ? 'true' : 'false')\r\n\r\n\t\t\tconst panel = this.panels[index]\r\n\r\n\t\t\tif (panel) {\r\n\t\t\t\tconst tabID = tab.id || `tab-${index}`\r\n\t\t\t\tconst panelId = panel.id || `tabpanel-${index}`\r\n\t\t\t\ttab.id = tabID\r\n\t\t\t\tpanel.id = panelId\r\n\t\t\t\ttab.setAttribute('aria-controls', panelId)\r\n\t\t\t\tpanel.setAttribute('role', 'tabpanel')\r\n\t\t\t\tpanel.setAttribute('aria-labelledby', tabID)\r\n\t\t\t\tpanel.hidden = index !== 0\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.tabs.forEach((tab) => {\r\n\t\t\ttab.addEventListener('click', (event) => {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tthis.selectTab(tab)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// Set indicator on init\r\n\t\tthis.updateIndicator(this.tabs[0])\r\n\t}\r\n\r\n\tselectTab(selectedTab) {\r\n\t\tthis.tabs.forEach((tab) => {\r\n\t\t\tconst selected = tab === selectedTab\r\n\t\t\ttab.setAttribute('aria-selected', selected)\r\n\t\t\ttab.tabIndex = selected ? 0 : -1\r\n\t\t})\r\n\r\n\t\tthis.panels.forEach((panel) => {\r\n\t\t\tconst tabID = selectedTab.getAttribute('aria-controls')\r\n\t\t\tpanel.hidden = panel.id !== tabID\r\n\t\t})\r\n\r\n\t\tthis.updateIndicator(selectedTab)\r\n\t}\r\n\r\n\tupdateIndicator(tab) {\r\n\t\tif (!this.indicator || !tab) return\r\n\t\tconst tabRect = tab.getBoundingClientRect()\r\n\t\tconst listRect = this.tabList.getBoundingClientRect()\r\n\t\tthis.indicator.style.width = `${tabRect.width}px`\r\n\t\tthis.indicator.style.left = `${tabRect.left - listRect.left}px`\r\n\t}\r\n}\r\n\r\nconst codeTabs = document.getElementById('code')\r\nconst phpCodeSection = document.getElementById('code-tabs-php-panel')\r\nconst jsCodeSection = document.getElementById('code-tabs-js-panel')\r\n\r\nif (phpCodeSection) {\r\n\tconst code = phpCodeSection.querySelector('code')\r\n\r\n\tif (code) {\r\n\t\tphpCodeSection.innerHTML = await codeToHtml(code.textContent, {\r\n\t\t\tlang: 'php',\r\n\t\t\ttheme: 'github-dark'\r\n\t\t})\r\n\t}\r\n}\r\n\r\nif (jsCodeSection) {\r\n\tconst code = jsCodeSection.querySelector('code')\r\n\r\n\tif (code) {\r\n\t\tjsCodeSection.innerHTML = await codeToHtml(code.textContent, {\r\n\t\t\tlang: 'js',\r\n\t\t\ttheme: 'github-dark'\r\n\t\t})\r\n\t}\r\n}\r\n\r\nif (codeTabs) new Tabs(codeTabs)\r\n"]}